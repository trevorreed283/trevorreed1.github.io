knitr::opts_chunk$set(echo = TRUE)
# remove the following '#' to install the `tidycensus` and `tidyverse` package; `tidyverse` will be most common-used package for use in the future
# install.packages("tidycensus")
# install.packages("tidyverse")
# This loads packages into the current session; however, it is best practice to load all packages at the start of an R Markdown document
library(tidycensus)
library(tidyverse)
# remove the following '#' to install the `tidycensus` and `tidyverse` package; `tidyverse` will be most common-used package for use in the future
install.packages("tidycensus")
install.packages("tidyverse")
# This loads packages into the current session; however, it is best practice to load all packages at the start of an R Markdown document
library(tidycensus)
library(tidyverse)
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
king_value <- get_acs(geography = "tract", # extract all tract-level data
table = "B25075",
state = "53", # 53 means Washington State, you can use 'WA'
county = "033", # 033 means King County, you can use 'king'
year = 2023)
# remove the following '#' to install the `tidycensus` and `tidyverse` package; `tidyverse` will be most common-used package for use in the future
install.packages("tidycensus")
install.packages("tidyverse")
# This loads packages into the current session; however, it is best practice to load all packages at the start of an R Markdown document
library(tidycensus)
library(tidyverse)
install.packages("tidyverse")
king_value <- get_acs(geography = "tract", # extract all tract-level data
table = "B25075",
state = "53", # 53 means Washington State, you can use 'WA'
county = "033", # 033 means King County, you can use 'king'
year = 2023)
# The CSV file will be saved in your current working directory
# Here, we use the function `write_csv` from package `readr`, which is built within `tidyverse`
write_csv(king_value, "king_value.csv")
another_king_value <- read_csv("king_value.csv")
# The CSV file will be saved in your current working directory
# Here, we use the function `write_csv` from package `readr`, which is built within `tidyverse`
write_csv(king_value, "king_value.csv")
# The CSV file will be saved in your current working directory
Here, we use the function `write_csv` from package `readr`, which is built within `tidyverse`
# The CSV file will be saved in your current working directory
# Here, we use the function `write_csv` from package `readr`, which is built within `tidyverse`
write_csv(king_value, "king_value.csv")
View(king_value)
View(another_king_value)
another_king_value <- read_csv("king_value.csv")
# check whether an object is a dataframe
is.data.frame(king_value)
# check the dataframe
view(king_value)
# check the first three rows, default as five rows
head(king_value, 3)
# check the column names
colnames(king_value)
# number of rows and columns
dim(king_value)
# select GEOID column and elements with index 1 to 10
king_value$GEOID[1:10]
# calculate the average estimate
# na.rm = TRUE helps to ignore missing values
mean(king_value$estimate, na.rm = TRUE)
pi # output the value of pi
# Math operations
2 + 3      # addition → 5
5 - 2      # subtraction → 3
4 * 6      # multiplication → 24
10 / 4     # division → 2.5
2^3        # exponentiation → 8
10 %% 3    # modulo (remainder) → 1
sqrt(400)  # square root of 400 → 20
x <- c(2, 4, 6, 8, 10) # Create those numbers to calculate
mean(x)      # average → 6
var(x)       # variance
sd(x)        # standard deviation
sum(x)       # sum of all elements
min(x)       # smallest value
max(x)       # largest value
range(x)     # min and max together
length(x)    # number of elements
new_object_preferred <- 144
new_object_not_preferred = 144 # using `=` is OK in R but not recommended; `=` is mainly for function arguments
new_object_preferred
sqrt(new_object_preferred)
numbers <- c(1, 2, 3, 4)       # numeric vector; `c()` means combine
names <- c("Alice", "Bob")     # character vector
print(numbers)           # show the values
length(numbers)          # check the number of elements
class(numbers)           # check the type
numbers > 2              # check whether each element is larger than 2
print('1991-04-04')
print('1991-04-04')
class('1991-04-04')
# as.Date('1991-04-04')
as.Date('1991-04-04')
as.Date('1991-04-04')
birthday<-as.Date('1991-04-04')
today<-'Sys.Date()'
'Sys.Date()'
today<-Sys.date()
'Sys.Date()
today<-'Sys.Date()
today<-'Sys.Date()'
'Sys.Date()'
as.date()
sys.date()
today<-sys.date()
today<-Sys.Date()
Sys.Date()
Sys.Date()
today<-Sys.Date()
seq(birthday,today)
[today]
[50]
vector(birthday,today)
vector(birthday)
as.vector(today,birthday)
combined<-c(birthday,today)
[today]
[1]
combined[1}
combined[1]
combined[2]
combined[2]-combined[1]
combined[2]-combined[1]/365
combined[2]-combined[1]
/365
days_old<-combined[2]-combined[1]
days_old/365
days_old<-combined[2]-combined[1]
days_old/365
Today is '`r today`, it has been `r days_old<-combined[2]-combined[1]`` years since my birthday.
days_old<-combined[2]-combined[1]
days_old/365
Today is `r SysDate()``, it has been `number of year` years since {what
days_old<-combined[2]-combined[1]
days_old/365
Today is `r Sys.Date()`, it has been `r days_old/365` years since my
Today is
days_old<-combined[2]-combined[1]
days_old/365
days_old<-combined[2]-combined[1]
age<-days_old/365
days_old<-combined[2]-combined[1]
age<-days_old/365
days_old<-combined[2]-combined[1]
days_old/365
# show the current working directory
getwd()
# TODO: modify the folder stored this `.Rmd` as the working directory
# setwd("/Users/yohaoyu/Repo/data-analytics-visualization/labs")
install.packages("tidycensus")
install.packages("tidyverse")
library(tidycensus)
library(tidyverse)
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
write_csv(king_value, "king_value.csv")
install.packages("tidycensus")
install.packages("tidyverse")
library(tidycensus)
library(tidyverse)
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
write_csv(king_value, "king_value.csv")
another_king_value <- read_csv("king_value.csv")
write.csv(king_value, "king_value.csv")
another_king_value <- read.csv("king_value.csv")
is.data.frame(king_value)
view(king_value)
View(king_value)
head(king_value, 3)
colnames(king_value)
dim(king_value)
king_value$GEOID[1:10]
mean(king_value$estimate, na.rm = TRUE)
View(king_value)
head(king_value, 3)
colnames(king_value)
dim(king_value)
king_value$GEOID[1:10]
mean(king_value$estimate, na.rm = TRUE)
median(king_value$estimate, na.rm = TRUE)
max(king_value$estimate,na.rm = TRUE)
min(king_value$estimate,na.rm = TRUE)
quantile(king_value$estimate, probs = .25)
quantile(king_value$estimate, probs = .75)
```
install.packages("tidycensus")
install.packages("tidyverse")
library(tidycensus)
install.packages("tidyverse")
